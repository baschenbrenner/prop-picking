{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminaschenbrenner/Development/code/prop-picking/src/components/EditPlantForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport ReactDom from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPlantForm = _ref => {\n  _s();\n  let {\n    setShowModal,\n    prop\n  } = _ref;\n  const modalRef = useRef();\n  const [formData, setFormData] = useState({\n    name: prop.name,\n    image1: prop.image1,\n    image2: \"\",\n    description: prop.description\n  });\n  function handleChange(e) {\n    const newFormData = {\n      ...formData,\n      [e.target.name]: e.target.value\n    };\n    setFormData(newFormData);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"hey\");\n    fetch(`http://localhost:3000/props/${prop.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n  }\n  const closeModal = e => {\n    if (e.target === modalRef.current) {\n      setShowModal(false);\n    }\n  };\n  return /*#__PURE__*/ReactDom.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: modalRef,\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Plant info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Prop name\",\n          onChange: handleChange,\n          value: formData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"image1\",\n          placeholder: \"Image URL\",\n          onChange: handleChange,\n          value: formData.image1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"image2\",\n          placeholder: \"Second Image URL\",\n          onChange: handleChange,\n          value: formData.image2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"test\",\n          name: \"description\",\n          placeholder: \"Description\",\n          onChange: handleChange,\n          value: formData.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this), document.getElementById(\"portal\"));\n};\n_s(EditPlantForm, \"aw4ENWOtOmD/KDnXS+FVYoM/qAA=\");\n_c = EditPlantForm;\nexport default EditPlantForm;\nvar _c;\n$RefreshReg$(_c, \"EditPlantForm\");","map":{"version":3,"names":["React","useState","useRef","ReactDom","jsxDEV","_jsxDEV","EditPlantForm","_ref","_s","setShowModal","prop","modalRef","formData","setFormData","name","image1","image2","description","handleChange","e","newFormData","target","value","handleSubmit","preventDefault","console","log","fetch","id","method","headers","body","JSON","stringify","closeModal","current","createPortal","className","ref","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","document","getElementById","_c","$RefreshReg$"],"sources":["/Users/benjaminaschenbrenner/Development/code/prop-picking/src/components/EditPlantForm.js"],"sourcesContent":["import React, { useState, useRef } from 'react'\nimport ReactDom from \"react-dom\";\n\nconst EditPlantForm = ({setShowModal, prop}) => {\n    const modalRef = useRef();\n    const [formData, setFormData] = useState({\n        name: prop.name,\n        image1: prop.image1,\n        image2: \"\",\n        description: prop.description\n      })\n\n    function handleChange(e){\n        const newFormData = {...formData, [e.target.name]:e.target.value}\n        setFormData(newFormData)\n      }\n\n    function handleSubmit(e){\n        e.preventDefault()\n        console.log(\"hey\")\n        fetch(`http://localhost:3000/props/${prop.id}`,{\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\":\"application/json\"\n            },\n            body: JSON.stringify(formData)\n        })\n    }\n\n    const closeModal = (e) => {\n        if (e.target === modalRef.current) {\n          setShowModal(false);\n        }\n      };\n\n      return ReactDom.createPortal(\n        <div className=\"container\" ref={modalRef} onClick={closeModal}>\n          <div className=\"modal\">\n            <h2>Edit Plant info</h2> \n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"name\" placeholder=\"Prop name\" onChange={handleChange} value={formData.name}/>\n                <input type=\"text\" name=\"image1\" placeholder=\"Image URL\" onChange={handleChange} value={formData.image1} />\n                <input type=\"text\" name=\"image2\" placeholder=\"Second Image URL\" onChange={handleChange} value={formData.image2} />\n                <input type=\"test\" name=\"description\" placeholder=\"Description\" onChange={handleChange} value={formData.description} />\n                <button type=\"submit\">Submit</button>\n            </form>\n\n            <button onClick={() => setShowModal(false)}>X</button>\n          </div>\n        </div>,\n        document.getElementById(\"portal\")\n      );\n}\n\nexport default EditPlantForm\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}