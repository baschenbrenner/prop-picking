{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminaschenbrenner/Development/code/prop-picking/src/components/EditPlantForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport ReactDom from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPlantForm = _ref => {\n  _s();\n  let {\n    setShowModal\n  } = _ref;\n  const [prop, setProp] = useState();\n  const modalRef = useRef();\n  const closeModal = e => {\n    if (e.target === modalRef.current) {\n      setShowModal(false);\n    }\n  };\n  return /*#__PURE__*/ReactDom.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: modalRef,\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"This is a Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this), document.getElementById(\"portal\"));\n};\n_s(EditPlantForm, \"Vemrt+FBTq61pWAyynoZR4ZvuaM=\");\n_c = EditPlantForm;\nexport default EditPlantForm;\nvar _c;\n$RefreshReg$(_c, \"EditPlantForm\");","map":{"version":3,"names":["React","useState","useRef","ReactDom","jsxDEV","_jsxDEV","EditPlantForm","_ref","_s","setShowModal","prop","setProp","modalRef","closeModal","e","target","current","createPortal","className","ref","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById","_c","$RefreshReg$"],"sources":["/Users/benjaminaschenbrenner/Development/code/prop-picking/src/components/EditPlantForm.js"],"sourcesContent":["import React, { useState, useRef } from 'react'\nimport ReactDom from \"react-dom\";\n\nconst EditPlantForm = ({setShowModal}) => {\n    const [prop, setProp] = useState()\n    const modalRef = useRef();\n\n    const closeModal = (e) => {\n        if (e.target === modalRef.current) {\n          setShowModal(false);\n        }\n      };\n\n      return ReactDom.createPortal(\n        <div className=\"container\" ref={modalRef} onClick={closeModal}>\n          <div className=\"modal\">\n            <h2>This is a Modal</h2>\n            <button onClick={() => setShowModal(false)}>X</button>\n          </div>\n        </div>,\n        document.getElementById(\"portal\")\n      );\n}\n\nexport default EditPlantForm\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,aAAa,GAAGC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAACC;EAAY,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAClC,MAAMW,QAAQ,GAAGV,MAAM,CAAC,CAAC;EAEzB,MAAMW,UAAU,GAAIC,CAAC,IAAK;IACtB,IAAIA,CAAC,CAACC,MAAM,KAAKH,QAAQ,CAACI,OAAO,EAAE;MACjCP,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBAAON,QAAQ,CAACc,YAAY,eAC1BZ,OAAA;IAAKa,SAAS,EAAC,WAAW;IAACC,GAAG,EAAEP,QAAS;IAACQ,OAAO,EAAEP,UAAW;IAAAQ,QAAA,eAC5DhB,OAAA;MAAKa,SAAS,EAAC,OAAO;MAAAG,QAAA,gBACpBhB,OAAA;QAAAgB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBpB,OAAA;QAAQe,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAAC,KAAK,CAAE;QAAAY,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,EACNC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAClC,CAAC;AACP,CAAC;AAAAnB,EAAA,CAnBKF,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAqBnB,eAAeA,aAAa;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}